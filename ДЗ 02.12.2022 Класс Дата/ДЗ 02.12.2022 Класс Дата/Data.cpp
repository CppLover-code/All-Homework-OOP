#include "Data.h"
#include <iostream>

using namespace std;

Data::Data()
{
    {
        //cout << " Конструктор\n";
        bool flag = true;
        do
        {
            cout << " Введите дату (день, месяц, год):\n";
            cin >> d >> m >> y;

            if (((y % 4 == 0 && y % 100 != 0 || y % 400 == 0) && (m == 2) && (d > 0 && d <= 29))
                || ((y % 4 == 0 && y % 100 != 0 || y % 400 == 0) && (m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) && (d > 0 && d <= 31))
                || ((y % 4 == 0 && y % 100 != 0 || y % 400 == 0) && (m == 4 || m == 6 || m == 9 || m == 11) && (d > 0 && d <= 30))
                || ((y % 4 > 0 && y % 400 != 0 || y % 100 == 0) && (m == 2) && (d > 0 && d <= 28))
                || ((y % 4 > 0 && y % 400 != 0 || y % 100 == 0) && (m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) && (d > 0 && d <= 31))
                || ((y % 4 > 0 && y % 400 != 0 || y % 100 == 0) && (m == 4 || m == 6 || m == 9 || m == 11) && (d > 0 && d <= 30)))
            {
                cout << " Дата введена корректно!\n\n";
                flag = true;
            }
            else
            {
                if ((y % 4 != 0 && y % 100 == 0 || y % 400 != 0) && (m == 2) && (d == 29))
                {
                    cout << " Год невисокосный!\n";
                }

                cout << " Дата введена некорректно!\n\n";

                flag = false;
            }

        } while (!flag);                                                     // цикл работает пока пользователь вводит некорректную дату

    }
}

int Less(const Data& D)  // подсчет для меньшей даты
{
    int sum = 0;
    int day = D.d;

    for (int i = D.m; i <= 12; i++)
    {
        if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)
        {
            sum += (31 - day);
        }
        else if (i == 4 || i == 6 || i == 9 || i == 11)
        {
            sum += (30 - day);
        }
        else if (i == 2)
        {
            if ((D.y % 4 == 0 && D.y % 100 != 0) || D.y % 400 == 0) // високосный год
            {
                sum += (29 - day);
            }
            else
            {
                sum += (28 - day);
            }
        }

        day = 0;
    }

    return sum;
}

int Greater(const Data& D)  // подсчет для большей даты
{
    int sum = 0;
    int day = D.d;
    sum += day;

    for (int i = D.m - 1; i >= 1; i--)
    {
        day = 0;
        if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)
        {
            sum += (31 - day);
        }
        else if (i == 4 || i == 6 || i == 9 || i == 11)
        {
            sum += (30 - day);
        }
        else if (i == 2)
        {
            if ((D.y % 4 == 0 && D.y % 100 != 0) || D.y % 400 == 0) // високосный год
            {
                sum += (29 - day);
            }
            else
            {
                sum += (28 - day);
            }
        }
    }

    return sum;
}

int checkYear(int y)  // проверка года на високосность
{
    if (y % 4 == 0 && y % 100 != 0 || y % 400 == 0) // високосный год
    {
        return 366;
    }
    else return 365;
}

int Data::operator-(Data& t)                                                  // не использую const для второй даты, тк осознанно буду менять даты местами, если первая дата больше второй
{
    int total = 0;
    int day = 0;

    if (y < t.y)                                                         // если первая дата меньше второй
    {
        total += Less(*this) + Greater(t);
        for (int i = y + 1; i < t.y; i++)
        {
            total += checkYear(i);
        }
    }
    else if (y > t.y)                                                    // если первая дата больше второй
    {
        total += Less(t) + Greater(*this);
        for (int i = t.y + 1; i < y; i++)
        {
            total += checkYear(i);
        }
    }
    else if (y == t.y)                                                   // если год один и тот же
    {
        if (m < t.m)
        {
            day = d;
            for (int i = m; i < t.m; i++)
            {
                if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)
                {
                    total += (31 - day);
                }
                else if (i == 4 || i == 6 || i == 9 || i == 11)
                {
                    total += (30 - day);
                }
                else if (i == 2)
                {
                    if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0)    // високосный год
                    {
                        total += (29 - day);
                    }
                    else
                    {
                        total += (28 - day);
                    }
                }
                if (i + 1 == t.m) total += t.d;
                else day = 0;
            }
        }
        else if (m > t.m)
        {
            day = t.d;
            for (int i = t.m; i < m; i++)
            {
                if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)
                {
                    total += (31 - day);
                }
                else if (i == 4 || i == 6 || i == 9 || i == 11)
                {
                    total += (30 - day);
                }
                else if (i == 2)
                {
                    if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0)   // високосный год
                    {
                        total += (29 - day);
                    }
                    else
                    {
                        total += (28 - day);
                    }
                }

                if (i + 1 == m) total += d;
                else day = 0;
            }
        }
        else if (m == t.m)                                              // если месяцы равны, то проверяем дни
        {
            (d > t.d) ? total += (d - t.d) : total += (t.d - d);
            if (d == t.d) total = 0;                                    // если даты полностью одинаковы день месяц и год, то будет ноль дней
        }
    }

    return total;
}

Data Data::operator+(int count)                                         // перегрузка оператора + (int)
{
    for (int i = m; i <= 12; )                                          // управляющая переменная зависима от текущего месяца, который будет меняться в зависимости от условий
    {
        if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10)  // проверка текущего месяца
        {
            if (count + d <= 31)                                        // если сумма кол-ва дней для увеличения и текущего кол-ва дней <= общему кол-ву дней в месяце,
            {
                d += count;                                             // то увеличивваем кол-во текущих дней на кол-во дней для увеличения
                break;                                                  // прерываем цикл
            }
            else                                                        // иначе, вычитаем из кол-ва дней для увеличения разницу между текущим кол-вом дней
            {
                count -= (31 - d);                                      //  и общим кол-вом дней в месяце
                d = 0;                                                  //  обнуляем текущее кол-во дней
                m++;                                                    // и увеличиваем месяц на 1
            }
        }
        else if (i == 12)
        {
            if (count + d <= 31)
            {
                d += count;
                break;
            }
            else                                                        // особый случай с 12 месяцем
            {                                                           // если кол-во дней для увеличений больше 31,
                count -= (31 - d);                                      // то вычитаем из кол-ва дней для увеличения разницу между текущим кол-вом дней, обнуляем текущее кол-во дней
                d = 0;                                                  // обнуляем текущее кол-во дней
                m = 1;                                                  // и месяц становится 1 (январь)
                y++;                                                    // год увеличивается на 1
            }
        }
        else if (i == 4 || i == 6 || i == 9 || i == 11)
        {
            if (count + d <= 30)
            {
                d += count;
                break;
            }
            else
            {
                count -= (30 - d);
                d = 0;
                m++;
            }
        }
        else if (i == 2)
        {
            if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0)            // високосный год
            {
                if (count + d <= 29)
                {
                    d += count;
                    break;
                }
                else
                {
                    count -= (29 - d);
                    d = 0;
                    m++;
                }
            }
            else
            {
                if (count + d <= 28)
                {
                    d += count;
                    break;
                }
                else
                {
                    count -= (28 - d);
                    d = 0;
                    m++;
                }
            }
        }
    }

    return *this;
}

std::ostream& operator<<(std::ostream& os, const Data& P)                  // вывод данных через поток
{
    os << P.d << "." << P.m << "." << P.y << "\n";

    return os;
}